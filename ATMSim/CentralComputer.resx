<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AACjhXL3o4Vy/6OFcv+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OF
        cv+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OF
        cv+jhXL/o4Vy96OFcv+jhXL/o4Rx/6OEcf+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6KEcf+ihHH/ooRx/6OE
        cf+jhHH/o4Rx/6OEcf+jhXL/o4Vy/6OFcv+jhXL/ooRx/6KEcf+jhXL/o4Vy/6OFcv+jhXL/o4Vy/6OF
        cv+jhHH/o4Rx/6OFcv+jhXL/o4Vy2qOFcuCniXfwq417/6iKd/+oinf/qIp3/6iKd/+oinf/q417/62Q
        fv+tkH7/q417/6uNe/+rjXv/q417/6iKd/+oinf/qIp3/6mLeP+sj33/rZB+/6qNev+oinf/qIp3/6iK
        d/+oinf/qIp3/6uNe/+niXfvo4Vy4KOFctmjhXIbnH5qHNS6qo/Yva7/y6yd/8mpmv/JqZr/yama/8mo
        mf/awbH/69rI/+jWxP/cw7T/2sCx/9rAsf/Yva7/y6yd/8mpmv/JqZr/za+f/+bTwv/r2sj/2cGw/8mo
        mf/JqZr/yama/8mpmv/LrJ3/2L2u/9S6qo+cfmoco4VyGwAAAADiybsA4sm7gODGuP/QsaL/zq6f/86u
        n//Orp//za2e/+LKuv/25tX/8+LR/+TMvv/iybv/4sm7/+DGuP/QsaL/zq6f/86un//TtaX/8N7O//bm
        1f/hybn/za2e/86un//Orp//zq6f/9Cxov/gxrj/4sm7f+LJuwAAAAAAAAAAAOLIugDiyLqA4MW3/9Cx
        ov/Orp//zq6f/86un//NrZ7/4cm5//Xl1P/y4dD/5Mu9/+LIuv/iyLr/4MW3/9Cxov/Orp//zq6f/9O1
        pf/v3c3/9eXU/+HJuf/NrZ7/zq6f/86un//Orp//0LGi/+DFt//iyLp/4si6AAAAAAAAAAAA4si6AOLI
        uoDgxbf/0LGi/86un//Orp//zq6f/82tnv/hybn/9eXU//Lh0P/ky73/4si6/+LIuv/gxbf/0LGi/86u
        n//Orp//07Wl/+/dzf/15dT/4cm5/82tnv/Orp//zq6f/86un//QsaL/4MW3/+LIun/iyLoAAAAAAAAA
        AADiyLoA4si6gODFt//QsaL/zq6f/86un//Orp//za2e/+HJuf/15dT/8uHQ/+TLvf/iyLr/4si6/+DF
        t//QsaL/zq6f/86un//TtaX/793N//Xl1P/hybn/za2e/86un//Orp//zq6f/9Cxov/gxbf/4si6f+LI
        ugAAAAAAAAAAAOLIugDiyLqA4MW3/9Cxov/Orp//zq6f/86un//NrZ7/4cm5//Xl1P/y4dD/5Mu9/+LI
        uv/iyLr/4MW3/9Cxov/Orp//zq6f/9O0pf/v3c3/9eXU/+HJuf/NrZ7/zq6f/86un//Orp//0LGi/+DF
        t//iyLp/4si6AAAAAAAAAAAA4si6AOLIuoDgxrj/07Wm/9Cxov/QsaL/0bGi/9Cwof/iy7v/9eXU//Lh
        0f/mz8D/5Mu9/+TMvf/iybr/1bio/9O1pf/TtaX/2Lys//Hfzv/15dT/4sq6/9Cwof/RsaL/0LGi/9Cx
        ov/Ttab/4Ma4/+LIun/iyLoAAAAAAAAAAADiyLoA4si6gOLHuf/ew7T/3sO1/9/Etf/dwrP/38S2/+rV
        xf/05NP/8+LR//Hezv/x4M//8N3N//Hfzv/u3Mz/7drK/+7czP/u3Mz/8+LR//Tl0//q1cX/38S2/93C
        s//fxLX/3sO1/97DtP/ix7n/4si6f+LIugAAAAAAAAAAAOLIugDiyLqA4Ma4/9W3qP/bv7D/27+w/9W3
        qP/gxbf/69bH//Tl1P/t2cn/6NHC//Hfzv/o0cL/7trK/+7ayv/o0cP/8d/P/+jRw//t2cn/9OXU/+vW
        x//gxbf/1beo/9u/sP/bv7D/1beo/+DGuP/iyLp/4si6AAAAAAAAAAAA4si6AOLIuoDhx7n/3sK0/+DF
        t//gxbf/3sK0/+HHuf/r1sf/9OTT//Hg0P/w3s7/8+LS//Dezv/y4dD/8uHQ//Dezv/z4tL/8N7O//Hg
        0P/05NP/69bH/+HHuf/ewrT/4MW3/+DFt//ewrT/4ce5/+LIun/iyLoAAAAAAAAAAADiyLoA4si6gODG
        uP/Vt6j/27+w/9u/sP/Vt6j/4MW3/+vWx//05dT/7dnJ/+jRwv/x387/6NHC/+7ayv/u2sr/6NHC//Hf
        zv/o0cL/7dnJ//Tl1P/r1sf/4MW3/9W3qP/bv7D/27+w/9W3qP/gxrj/4si6f+LIugAAAAAAAAAAAOLI
        ugDiyLqA4ce5/97CtP/gxbf/4MW3/97CtP/hx7n/69bH//Tk0//x4ND/8N7O//Pi0v/w3s7/8uHQ//Lh
        0P/w3s7/8+LS//Dezv/x4ND/9OTT/+vWx//hx7n/3sK0/+DFt//gxbf/3sK0/+HHuf/iyLp/4si6AAAA
        AAAAAAAA4si6AOLIuoDgxrj/1beo/9u/sP/bv7D/1beo/+DFt//r1sf/9OXU/+3Zyf/o0cL/8d/O/+jR
        wv/u2sr/7trK/+jRwv/x387/6NHC/+3Zyf/05dT/69bH/+DFt//Vt6j/27+w/9u/sP/Vt6j/4Ma4/+LI
        un/iyLoAAAAAAAAAAADiyLoA4si6gOHHuf/ewrT/4MW3/+DFt//ewrT/4ce5/+vWx//05NP/8eDQ//De
        zv/z4tL/8N7O//Lh0P/y4dD/8N7O//Pi0v/w3s7/8eDQ//Tk0//r1sf/4ce5/97CtP/gxbf/4MW3/97C
        tP/hx7n/4si6f+LIugAAAAAAAAAAAOLIugDiyLqA4Ma4/9W3qP/bv7D/27+w/9W3qP/gxbf/69bH//Tl
        1P/t2cn/6NHC//Hfzv/o0cL/7trK/+7ayv/o0cL/8d/O/+jRwv/t2cn/9OXU/+vWx//gxbf/1beo/9u/
        sP/bv7D/1beo/+DGuP/iyLp/4si6AAAAAAAAAAAA4si6AOLIuoDhx7n/3sK0/+DFt//gxbf/3sK0/+HH
        uf/r1sf/9OTT//Pi0f/y4ND/9ePS/+7g0f/j4Nb/4+DW/+7g0f/149L/8uDQ//Pi0f/05NP/69bH/+HH
        uf/ewrT/4MW3/+DFt//ewrT/4ce5/+LIun/iyLoAAAAAAAAAAADiyLoA4si6gODGuP/Vt6j/27+w/9u/
        sP/Vt6j/4MW3/+vWx//05NP/9OTT//Pk0//H3uD/iNbx/2zR+P9s0fj/iNbx/8fe4P/z5NP/9OTT//Tk
        0//r1sf/4MW3/9W3qP/bv7D/27+w/9W3qP/gxrj/4si6f+LIugAAAAAAAAAAAOLIugDiyLqA4ce5/97C
        tP/gxbf/4MW3/97CtP/hx7n/69bH//Tk0//15NP/udzj/2HR/P9Szf7/Q7j0/0O48/9SzP7/YNH8/7nc
        5P/15NP/9OTT/+vWx//hx7n/3sK0/+DFt//gxbf/3sK0/+HHuf/iyLp/4si6AAAAAADOrp8CyaiZD+HH
        uYbgxrj/1beo/9u/sP/bvrD/1bao/+DFt//r1sf/9uXT/93h2f9r0vn/U87//0K28v83pur/N6fq/0K1
        8f9Tzf7/a9L5/93h2f/25dP/69bH/+DFt//Vtqj/276w/9u/sP/Vt6j/4Ma4/+HHuYbJqJkPzq6fAs6u
        nxvOrp+30rSl49m8rv/bwLH/4MW3/+HGuP/gxbf/4se5/+vWx//35dP/ttzk/1bP//9TzP3/Q7by/0Cz
        8P86quz/PK3t/1PL/f9Wz///t9zk//fl0//r1sf/4se5/+DFt//hxrj/4MW3/9vAsf/ZvK7/0rSl486u
        n7fOrp8bzq6fI86un9/Orp//zq6f/8+wof/StKX/17qr/9zAsv/gxbf/69bG//fl0/+n2uj/VM///1bP
        //9KwPf/Oars/zmq6/9KwPf/Vs///1TP//+n2uj/9+XT/+vWxv/gxbf/3MGy/9e6q//TtKX/z7Ch/86u
        n//Orp//zq6f386unyPOrp8azq6fxc6un/3Orp//zq6f/86un//Orp//z6+g/9Gxov/kzb3/9+XT/7bc
        5P9Wz///U8v9/zyt7f86quz/QLPw/0O28v9TzP3/Vs///7bc5P/35dP/5M29/9Gxov/Pr6D/zq6f/86u
        n//Orp//zq6f/86un/3Orp/Fzq6fGs6unwHOrp8gzq6fV86un5fOrp/Qzq6f9M6un//Orp//za2e/+HJ
        uf/25dP/3eHZ/2vS+f9Tzf7/QrTx/zen6v83pur/Qrby/1PO//9r0vn/3eHZ//bl0//hybn/za2e/86u
        n//Orp//zq6f9M6un9HOrp+Yzq6fWM6unyDOrp8BAAAAAAAAAADOrp8Azq6fAc6unxTOrp9Azq6ffc6u
        n7vNrZ7p4cm5/fXl1P/15NP/udzk/2DR/P9SzP7/Q7jz/0O48/9Szf7/YNH8/7nc5P/15NP/9eXU/+HJ
        uf3NrZ7pzq6fvM6un37Orp9Bzq6fFc6unwLOrp8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM6u
        nwDMqJsAzq6fCcqomSnr18em9OTT//Tk0//z5NP/x97g/4jW8v9s0fj/bNH4/4jW8f/H3uD/8+TT//Tk
        0//05NP/69fHpsqomSnOrp8KyaybAM6unwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOXLvgDky70B4se5EvHfzo3y4dD/8uHQ//Lh0P/04c//7uDR/+Le1P/i3tT/7uDR//Th
        z//y4dD/8uHQ//Lh0P/x386N4se6EuTLvQHkzL4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4si6AOLIuhfiyLq/48q88uTLvf/ky73/5Mu9/+TLvf/ky73/5cy9/+XM
        vf/ky73/5Mu9/+TLvf/ky73/5Mu9/+PKvPLiyLq/4si6F+LIugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADiyLoA4si6H+LIuuDiyLr/4si6/+LIuv/iyLr/4si6/+LI
        uv/iyLr/4si6/+LIuv/iyLr/4si6/+LIuv/iyLr/4si6/+LIuuDiyLof4si6AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOLIugDiyLoa4si62uLIuv/iyLr/4si6/+LI
        uv/iyLr/4si6/+LIuv/iyLr/4si6/+LIuv/iyLr/4si6/+LIuv/iyLr/4si62uLIuhriyLoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AADgAAAH/gAAf/4AAH/+AAB//gAAf/4AAH8=
</value>
  </data>
</root>